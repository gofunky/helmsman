# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: praqma/helmsman-test
    steps:
      - checkout
      - run:
          name: Build helmsman
          command: |
            echo "fetching dependencies ..."
            go get github.com/Praqma/helmsman/gcs 
            go get github.com/Praqma/helmsman/aws
            echo "building ..."
            TAG=$(git describe --abbrev=0 --tags)-$(date +"%d%m%y")
            go build -ldflags '-X main.version='$TAG' -extldflags "-static"'
  
  test:
    docker: 
      - image: praqma/helmsman-test
    steps:
      - checkout 
      - run:
          name: Unit test helmsman  
          command: |
            echo "fetching dependencies ..."
            go get github.com/Praqma/helmsman/gcs 
            go get github.com/Praqma/helmsman/aws
            echo "init Helm..."
            helm init --client-only
            echo "running tests ..."
            go test -v
  release: 
    docker: 
      - image: praqma/helmsman-test
    steps:
      - checkout 
      - run: 
          name: Release helmsman
          command: |
            TAG_SHA=$(git rev-parse $(git describe --abbrev=0 --tags))
            LAST_COMMIT=$(git rev-parse HEAD)
            if [ "${TAG_SHA}" == "${LAST_COMMIT}" ]; then 
              echo "fetching dependencies ..."
              go get github.com/Praqma/helmsman/gcs 
              go get github.com/Praqma/helmsman/aws
              echo "releasing ..."
              goreleaser --release-notes release-notes.md 
            else 
              echo "No release is needed yet."
              exit 0
            fi    
     
      # - setup_remote_docker
      # - run:
      #     name: build docker images and push them to dockerhub
      #     command: |
      #       TAG=$(git describe --abbrev=0 --tags)
      #       docker login -u $DOCKER_USER -p $DOCKERHUB
      #       docker build -t praqma/helmsman:$TAG-helm-v2.8.1 --build-arg HELM_VERSION=v2.8.1 dockerfile/.
      #       docker push praqma/helmsman:$TAG-helm-v2.8.1
      #       docker build -t praqma/helmsman:$TAG-helm-v2.8.0 --build-arg HELM_VERSION=v2.8.0 dockerfile/.
      #       docker push praqma/helmsman:$TAG-helm-v2.8.0
      #       docker build -t praqma/helmsman:$TAG-helm-v2.7.2 --build-arg HELM_VERSION=v2.7.2 dockerfile/.
      #       docker push praqma/helmsman:$TAG-helm-v2.7.2

                
workflows:
  version: 2
  build-test-push-release:
    jobs:
      - build
      - test:
          requires:
            - build       
      - release:
          requires:
            - test
          filters:
            branches:
              only: master 
            tags:
              only: /^v.*/       